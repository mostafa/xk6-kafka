name: Build and publish xk6-kafka

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build xk6-kafka
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Go üßë‚Äçüíª
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'

      - name: Install xk6 and build xk6-kafka for different platforms üèóÔ∏è
        run: |
          mkdir dist
          go install go.k6.io/xk6/cmd/xk6@latest
          GOOS=linux GOARCH=amd64 xk6 build --output dist/xk6-kafka_${{ github.ref_name }}_linux_amd64 --with github.com/mostafa/xk6-kafka@${{ github.ref_name }}
          tar cvzf dist/xk6-kafka_${{ github.ref_name }}_linux_amd64.tar.gz dist/xk6-kafka_${{ github.ref_name }}_linux_amd64
          GOOS=darwin GOARCH=amd64 xk6 build --output dist/xk6-kafka_${{ github.ref_name }}_darwin_amd64 --with github.com/mostafa/xk6-kafka@${{ github.ref_name }}
          tar cvzf dist/xk6-kafka_${{ github.ref_name }}_darwin_amd64.tar.gz dist/xk6-kafka_${{ github.ref_name }}_darwin_amd64
          GOOS=windows GOARCH=amd64 xk6 build --output dist/xk6-kafka_${{ github.ref_name }}_windows_amd64.exe --with github.com/mostafa/xk6-kafka@${{ github.ref_name }}
          tar cvzf dist/xk6-kafka_${{ github.ref_name }}_windows_amd64.tar.gz dist/xk6-kafka_${{ github.ref_name }}_windows_amd64.exe

      - name: Generate CycloneDX SBOM artifacts üìÉ
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: |
          go install github.com/CycloneDX/cyclonedx-gomod/cmd/cyclonedx-gomod@latest
          cyclonedx-gomod mod -json -licenses -output code-cyclonedx-xk6-kafka-${{ github.ref_name }}.json

      - name: Docker meta üìù
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: mostafamoradian/xk6-kafka
          tags: |
            type=semver,pattern={{version}}

      - name: Login to DockerHub üîí
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image üõ≥Ô∏è
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          build-args: K6_BINARY=./dist/xk6-kafka_${{ github.ref_name }}_linux_amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Copy the cosign keys üìã
        run: |
          echo "$COSIGN_PRIVATE_KEY" > cosign.key
          echo "$COSIGN_PUBLIC_KEY" > cosign.pub
        shell: bash
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PUBLIC_KEY: ${{ secrets.COSIGN_PUBLIC_KEY }}

      - name: Sign the Docker image ‚úçÔ∏è
        uses: sigstore/cosign-installer@main
        run: cosign sign --key cosign.key mostafamoradian/xk6-kafka:${{ steps.meta.outputs.tags }}
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

      - name: Verify the Docker image signature ‚úÖ
        uses: sigstore/cosign-installer@main
        run: cosign verify --key cosign.pub mostafamoradian/xk6-kafka:${{ steps.meta.outputs.tags }}

      - name: Remove the cosign keys üßπ
        run: rm -rf cosign.key cosign.pub
        shell: bash

      - name: Scan code with Trivy vulnerability scanner üîç
        if: startsWith(github.ref, 'refs/tags/')
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: 1
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          skip-dirs: "fixtures"

      - name: Upload Trivy scan results to GitHub Security tab ‚¨ÜÔ∏è
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Scan Docker image with Syft and generate SBOM ü¶â
        uses: anchore/sbom-action@v0
        with:
          image: mostafamoradian/xk6-kafka:${{ steps.meta.outputs.tags }}
          artifact-name: docker-image-cyclonedx-xk6-kafka-${{ github.ref_name }}.json
          format: cyclonedx-json
          dependency-snapshot: true

      - name: Create Release üì¶ and add binaries and SBOM files üíæ
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.tar.gz
            code-cyclonedx-xk6-kafka-${{ github.ref_name }}.json
            docker-image-cyclonedx-xk6-kafka-${{ github.ref_name }}.json
